/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as AuthedImport } from './routes/_authed'
import { Route as IndexImport } from './routes/index'
import { Route as AuthedChannelChannelIdImport } from './routes/_authed/channel/$channelId'

// Create Virtual Routes

const AboutLazyImport = createFileRoute('/about')()
const AuthedSettingsLazyImport = createFileRoute('/_authed/settings')()
const AuthedHomeLazyImport = createFileRoute('/_authed/home')()
const AuthedAboutLazyImport = createFileRoute('/_authed/about')()

// Create/Update Routes

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const AuthedRoute = AuthedImport.update({
  id: '/_authed',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/_authed.lazy').then((d) => d.Route))

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthedSettingsLazyRoute = AuthedSettingsLazyImport.update({
  path: '/settings',
  getParentRoute: () => AuthedRoute,
} as any).lazy(() =>
  import('./routes/_authed/settings.lazy').then((d) => d.Route),
)

const AuthedHomeLazyRoute = AuthedHomeLazyImport.update({
  path: '/home',
  getParentRoute: () => AuthedRoute,
} as any).lazy(() => import('./routes/_authed/home.lazy').then((d) => d.Route))

const AuthedAboutLazyRoute = AuthedAboutLazyImport.update({
  path: '/about',
  getParentRoute: () => AuthedRoute,
} as any).lazy(() => import('./routes/_authed/about.lazy').then((d) => d.Route))

const AuthedChannelChannelIdRoute = AuthedChannelChannelIdImport.update({
  path: '/channel/$channelId',
  getParentRoute: () => AuthedRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authed': {
      id: '/_authed'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthedImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/_authed/about': {
      id: '/_authed/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AuthedAboutLazyImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/home': {
      id: '/_authed/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof AuthedHomeLazyImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/settings': {
      id: '/_authed/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthedSettingsLazyImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/channel/$channelId': {
      id: '/_authed/channel/$channelId'
      path: '/channel/$channelId'
      fullPath: '/channel/$channelId'
      preLoaderRoute: typeof AuthedChannelChannelIdImport
      parentRoute: typeof AuthedImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AuthedRoute: AuthedRoute.addChildren({
    AuthedAboutLazyRoute,
    AuthedHomeLazyRoute,
    AuthedSettingsLazyRoute,
    AuthedChannelChannelIdRoute,
  }),
  LoginRoute,
  AboutLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authed",
        "/login",
        "/about"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authed": {
      "filePath": "_authed.tsx",
      "children": [
        "/_authed/about",
        "/_authed/home",
        "/_authed/settings",
        "/_authed/channel/$channelId"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/_authed/about": {
      "filePath": "_authed/about.lazy.tsx",
      "parent": "/_authed"
    },
    "/_authed/home": {
      "filePath": "_authed/home.lazy.tsx",
      "parent": "/_authed"
    },
    "/_authed/settings": {
      "filePath": "_authed/settings.lazy.tsx",
      "parent": "/_authed"
    },
    "/_authed/channel/$channelId": {
      "filePath": "_authed/channel/$channelId.tsx",
      "parent": "/_authed"
    }
  }
}
ROUTE_MANIFEST_END */
